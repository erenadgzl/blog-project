{"remainingRequest":"/Users/erenadiguzel/vueprojects/blog-project/node_modules/babel-loader/lib/index.js!/Users/erenadiguzel/vueprojects/blog-project/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/erenadiguzel/vueprojects/blog-project/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/erenadiguzel/vueprojects/blog-project/src/components/post/PostList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/erenadiguzel/vueprojects/blog-project/src/components/post/PostList.vue","mtime":1585088994394},{"path":"/Users/erenadiguzel/vueprojects/blog-project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/erenadiguzel/vueprojects/blog-project/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/erenadiguzel/vueprojects/blog-project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/erenadiguzel/vueprojects/blog-project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL2VyZW5hZGlndXplbC92dWVwcm9qZWN0cy9ibG9nLXByb2plY3Qvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgZmlyZWJhc2UgZnJvbSAiZmlyZWJhc2UiOwppbXBvcnQgeyByb3V0ZXIgfSBmcm9tICIuLi8uLi9yb3V0ZXIiOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHBvc3RzOiBbXQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGdldFBvc3Q6IGZ1bmN0aW9uIGdldFBvc3QoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciBwb3N0cywgcG9zdHNSZWY7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX3RoaXMucG9zdHMgPSBbXTsKICAgICAgICAgICAgICAgIHBvc3RzID0gW107CiAgICAgICAgICAgICAgICBwb3N0c1JlZiA9IGZpcmViYXNlLmRhdGFiYXNlKCkucmVmKCdwb3N0cycpOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDU7CiAgICAgICAgICAgICAgICByZXR1cm4gcG9zdHNSZWYub24oJ3ZhbHVlJywgZnVuY3Rpb24gKHNuYXBzaG90KSB7CiAgICAgICAgICAgICAgICAgIHNuYXBzaG90LmZvckVhY2goZnVuY3Rpb24gKGNoaWxkU25hcHNob3QpIHsKICAgICAgICAgICAgICAgICAgICB2YXIgaXRlbSA9IHsKICAgICAgICAgICAgICAgICAgICAgIGlkOiBjaGlsZFNuYXBzaG90LmtleSwKICAgICAgICAgICAgICAgICAgICAgIHRpdGxlOiBjaGlsZFNuYXBzaG90LnZhbCgpLnRpdGxlCiAgICAgICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgICAgICBwb3N0cy5wdXNoKGl0ZW0pOwogICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICBfdGhpcy5wb3N0cyA9IHBvc3RzOwoKICAgICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgcG9zdERldGFpbDogZnVuY3Rpb24gcG9zdERldGFpbChpZCkgewogICAgICByb3V0ZXIucHVzaCgiL3Bvc3QvIiArIGlkKTsKICAgIH0sCiAgICBkZWxldGVQb3N0OiBmdW5jdGlvbiBkZWxldGVQb3N0KGlkKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgdmFyIHBvc3RzUmVmOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBwb3N0c1JlZiA9IGZpcmViYXNlLmRhdGFiYXNlKCkucmVmKCdwb3N0cy8nICsgaWQpOwogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIHBvc3RzUmVmLnJlbW92ZSgpLnRoZW4oZnVuY3Rpb24gKCkge30pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygiUmVtb3ZlIGZhaWxlZDogIiArIGVycm9yLm1lc3NhZ2UpOwogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIF90aGlzMi5nZXRQb3N0KCk7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMik7CiAgICAgIH0pKSgpOwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMucG9zdHMgPSBbXTsKICAgIHRoaXMuZ2V0UG9zdCgpOwogIH0KfTs="},{"version":3,"sources":["PostList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAcA,OAAA,QAAA,MAAA,UAAA;AACA,SAAA,MAAA,QAAA,cAAA;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,KAAA,EAAA;AADA,KAAA;AAGA,GALA;AAMA,EAAA,OAAA,EAAA;AACA,IAAA,OADA,qBACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,KAAA,CAAA,KAAA,GAAA,EAAA;AACA,gBAAA,KAFA,GAEA,EAFA;AAGA,gBAAA,QAHA,GAGA,QAAA,CAAA,QAAA,GAAA,GAAA,CAAA,OAAA,CAHA;AAAA;AAAA,uBAIA,QAAA,CAAA,EAAA,CAAA,OAAA,EAAA,UAAA,QAAA,EAAA;AACA,kBAAA,QAAA,CAAA,OAAA,CAAA,UAAA,aAAA,EAAA;AACA,wBAAA,IAAA,GAAA;AAAA,sBAAA,EAAA,EAAA,aAAA,CAAA,GAAA;AAAA,sBAAA,KAAA,EAAA,aAAA,CAAA,GAAA,GAAA;AAAA,qBAAA;AACA,oBAAA,KAAA,CAAA,IAAA,CAAA,IAAA;AACA,mBAHA;AAIA,iBALA,CAJA;;AAAA;AAUA,gBAAA,KAAA,CAAA,KAAA,GAAA,KAAA;;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA,KAZA;AAaA,IAAA,UAbA,sBAaA,EAbA,EAaA;AACA,MAAA,MAAA,CAAA,IAAA,CAAA,WAAA,EAAA;AACA,KAfA;AAgBA,IAAA,UAhBA,sBAgBA,EAhBA,EAgBA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,QADA,GACA,QAAA,CAAA,QAAA,GAAA,GAAA,CAAA,WAAA,EAAA,CADA;AAAA;AAAA,uBAEA,QAAA,CAAA,MAAA,GACA,IADA,CACA,YAAA,CACA,CAFA,EAGA,KAHA,CAGA,UAAA,KAAA,EAAA;AACA,kBAAA,OAAA,CAAA,GAAA,CAAA,oBAAA,KAAA,CAAA,OAAA;AACA,iBALA,CAFA;;AAAA;AAQA,gBAAA,MAAA,CAAA,OAAA;;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAzBA,GANA;AAiCA,EAAA,OAAA,EAAA,mBAAA;AACA,SAAA,KAAA,GAAA,EAAA;AACA,SAAA,OAAA;AACA;AApCA,CAAA","sourcesContent":["<template>\n    <div>\n    <b-container fluid=\"sm\">\n      <b-card class=\"login-content\" header=\"Post List\">\n        <b-list-group  v-for=\"(post,index) in posts\" :key=\"index\">\n          <b-list-group-item @click=\"postDetail(post.id)\" button >{{post.title}}</b-list-group-item>\n          <b-icon @click=\"deletePost(post.id)\" style=\"height:30px; background-color: #ff4d4d; width:100%; color: #ffe6e6;border-radius: 0 0 10px 10px; margin-bottom:10px; cursor:pointer\" icon=\"trash\"></b-icon>\n        </b-list-group>\n      </b-card>\n    </b-container>\n  </div>\n</template>\n\n<script>\nimport firebase from \"firebase\"\nimport { router } from \"../../router\";\n\nexport default {\n  data() {\n    return {\n      posts : []\n    };\n  },\n  methods: {\n    async getPost(){\n      this.posts=[]\n        var posts=[]\n        var postsRef = firebase.database().ref('posts');\n        await postsRef.on('value',  (snapshot) => {\n          snapshot.forEach(function(childSnapshot) {\n            var item = { id :childSnapshot.key , title: childSnapshot.val().title }\n            posts.push(item)\n          });\n      })\n      this.posts=posts\n    },\n    postDetail(id){\n      router.push(\"/post/\"+id)\n    },\n    async deletePost(id){\n      var postsRef = firebase.database().ref('posts/' + id);\n      await postsRef.remove()\n        .then(function() {\n        })\n        .catch(function(error) {\n          console.log(\"Remove failed: \" + error.message)\n        });  \n        this.getPost()\n    }\n  },\n  mounted: function () {\n    this.posts=[]\n    this.getPost()\n  }\n};\n</script>"],"sourceRoot":"src/components/post"}]}