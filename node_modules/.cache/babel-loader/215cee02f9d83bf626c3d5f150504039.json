{"remainingRequest":"/Users/erenadiguzel/vueprojects/blog-project/node_modules/babel-loader/lib/index.js!/Users/erenadiguzel/vueprojects/blog-project/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/erenadiguzel/vueprojects/blog-project/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/erenadiguzel/vueprojects/blog-project/src/components/post/PostList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/erenadiguzel/vueprojects/blog-project/src/components/post/PostList.vue","mtime":1585080947814},{"path":"/Users/erenadiguzel/vueprojects/blog-project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/erenadiguzel/vueprojects/blog-project/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/erenadiguzel/vueprojects/blog-project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/erenadiguzel/vueprojects/blog-project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL2VyZW5hZGlndXplbC92dWVwcm9qZWN0cy9ibG9nLXByb2plY3Qvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgZmlyZWJhc2UgZnJvbSAiZmlyZWJhc2UiOwppbXBvcnQgeyByb3V0ZXIgfSBmcm9tICIuLi8uLi9yb3V0ZXIiOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHBvc3RzOiBbXQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGdldFBvc3Q6IGZ1bmN0aW9uIGdldFBvc3QoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciBwb3N0cywgcG9zdHNSZWY7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgcG9zdHMgPSBbXTsKICAgICAgICAgICAgICAgIHBvc3RzUmVmID0gZmlyZWJhc2UuZGF0YWJhc2UoKS5yZWYoJ3Bvc3RzJyk7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNDsKICAgICAgICAgICAgICAgIHJldHVybiBwb3N0c1JlZi5vbigndmFsdWUnLCBmdW5jdGlvbiAoc25hcHNob3QpIHsKICAgICAgICAgICAgICAgICAgc25hcHNob3QuZm9yRWFjaChmdW5jdGlvbiAoY2hpbGRTbmFwc2hvdCkgewogICAgICAgICAgICAgICAgICAgIHZhciBpdGVtID0gewogICAgICAgICAgICAgICAgICAgICAgaWQ6IGNoaWxkU25hcHNob3Qua2V5LAogICAgICAgICAgICAgICAgICAgICAgdGl0bGU6IGNoaWxkU25hcHNob3QudmFsKCkudGl0bGUKICAgICAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgICAgIHBvc3RzLnB1c2goaXRlbSk7CiAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICAgIF90aGlzLnBvc3RzID0gcG9zdHM7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBwb3N0RGV0YWlsOiBmdW5jdGlvbiBwb3N0RGV0YWlsKGlkKSB7CiAgICAgIHJvdXRlci5wdXNoKCIvIiArIGlkKTsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLmdldFBvc3QoKTsKICB9Cn07"},{"version":3,"sources":["PostList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAkBA,OAAA,QAAA,MAAA,UAAA;AACA,SAAA,MAAA,QAAA,cAAA;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,KAAA,EAAA;AADA,KAAA;AAGA,GALA;AAMA,EAAA,OAAA,EAAA;AACA,IAAA,OADA,qBACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,KADA,GACA,EADA;AAEA,gBAAA,QAFA,GAEA,QAAA,CAAA,QAAA,GAAA,GAAA,CAAA,OAAA,CAFA;AAAA;AAAA,uBAGA,QAAA,CAAA,EAAA,CAAA,OAAA,EAAA,UAAA,QAAA,EAAA;AACA,kBAAA,QAAA,CAAA,OAAA,CAAA,UAAA,aAAA,EAAA;AACA,wBAAA,IAAA,GAAA;AAAA,sBAAA,EAAA,EAAA,aAAA,CAAA,GAAA;AAAA,sBAAA,KAAA,EAAA,aAAA,CAAA,GAAA,GAAA;AAAA,qBAAA;AACA,oBAAA,KAAA,CAAA,IAAA,CAAA,IAAA;AACA,mBAHA;AAIA,iBALA,CAHA;;AAAA;AASA,gBAAA,KAAA,CAAA,KAAA,GAAA,KAAA;;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA,KAXA;AAYA,IAAA,UAZA,sBAYA,EAZA,EAYA;AACA,MAAA,MAAA,CAAA,IAAA,CAAA,MAAA,EAAA;AACA;AAdA,GANA;AAsBA,EAAA,OAAA,EAAA,mBAAA;AACA,SAAA,OAAA;AACA;AAxBA,CAAA","sourcesContent":["<template>\n\n    <div>\n    <b-container fluid=\"sm\">\n      <b-card class=\"login-content\" header=\"Post List\">\n        \n          \n            <b-list-group>\n        <b-list-group-item @click=\"postDetail(post.id)\" button v-for=\"(post,index) in posts\" :key=\"index\">{{post.title}}</b-list-group-item>\n    </b-list-group>\n          \n\n      </b-card>\n    </b-container>\n  </div>\n</template>\n\n<script>\nimport firebase from \"firebase\"\nimport { router } from \"../../router\";\n\nexport default {\n  data() {\n    return {\n      posts : []\n    };\n  },\n  methods: {\n    async getPost(){\n        var posts=[]\n        var postsRef = firebase.database().ref('posts');\n        await postsRef.on('value',  (snapshot) => {\n          snapshot.forEach(function(childSnapshot) {\n            var item = { id :childSnapshot.key , title: childSnapshot.val().title }\n            posts.push(item)\n          });\n      })\n      this.posts=posts\n    },\n    postDetail(id){\n      router.push(\"/\"+id)\n    }\n  },\n  mounted: function () {\n    this.getPost()\n  }\n};\n</script>"],"sourceRoot":"src/components/post"}]}