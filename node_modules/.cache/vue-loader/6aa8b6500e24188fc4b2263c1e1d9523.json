{"remainingRequest":"/Users/erenadiguzel/vueprojects/blog-project/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/erenadiguzel/vueprojects/blog-project/src/components/post/PostList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/erenadiguzel/vueprojects/blog-project/src/components/post/PostList.vue","mtime":1585088994394},{"path":"/Users/erenadiguzel/vueprojects/blog-project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/erenadiguzel/vueprojects/blog-project/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/erenadiguzel/vueprojects/blog-project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/erenadiguzel/vueprojects/blog-project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBmaXJlYmFzZSBmcm9tICJmaXJlYmFzZSIKaW1wb3J0IHsgcm91dGVyIH0gZnJvbSAiLi4vLi4vcm91dGVyIjsKCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcG9zdHMgOiBbXQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGFzeW5jIGdldFBvc3QoKXsKICAgICAgdGhpcy5wb3N0cz1bXQogICAgICAgIHZhciBwb3N0cz1bXQogICAgICAgIHZhciBwb3N0c1JlZiA9IGZpcmViYXNlLmRhdGFiYXNlKCkucmVmKCdwb3N0cycpOwogICAgICAgIGF3YWl0IHBvc3RzUmVmLm9uKCd2YWx1ZScsICAoc25hcHNob3QpID0+IHsKICAgICAgICAgIHNuYXBzaG90LmZvckVhY2goZnVuY3Rpb24oY2hpbGRTbmFwc2hvdCkgewogICAgICAgICAgICB2YXIgaXRlbSA9IHsgaWQgOmNoaWxkU25hcHNob3Qua2V5ICwgdGl0bGU6IGNoaWxkU25hcHNob3QudmFsKCkudGl0bGUgfQogICAgICAgICAgICBwb3N0cy5wdXNoKGl0ZW0pCiAgICAgICAgICB9KTsKICAgICAgfSkKICAgICAgdGhpcy5wb3N0cz1wb3N0cwogICAgfSwKICAgIHBvc3REZXRhaWwoaWQpewogICAgICByb3V0ZXIucHVzaCgiL3Bvc3QvIitpZCkKICAgIH0sCiAgICBhc3luYyBkZWxldGVQb3N0KGlkKXsKICAgICAgdmFyIHBvc3RzUmVmID0gZmlyZWJhc2UuZGF0YWJhc2UoKS5yZWYoJ3Bvc3RzLycgKyBpZCk7CiAgICAgIGF3YWl0IHBvc3RzUmVmLnJlbW92ZSgpCiAgICAgICAgLnRoZW4oZnVuY3Rpb24oKSB7CiAgICAgICAgfSkKICAgICAgICAuY2F0Y2goZnVuY3Rpb24oZXJyb3IpIHsKICAgICAgICAgIGNvbnNvbGUubG9nKCJSZW1vdmUgZmFpbGVkOiAiICsgZXJyb3IubWVzc2FnZSkKICAgICAgICB9KTsgIAogICAgICAgIHRoaXMuZ2V0UG9zdCgpCiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiAoKSB7CiAgICB0aGlzLnBvc3RzPVtdCiAgICB0aGlzLmdldFBvc3QoKQogIH0KfTsK"},{"version":3,"sources":["PostList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAcA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PostList.vue","sourceRoot":"src/components/post","sourcesContent":["<template>\n    <div>\n    <b-container fluid=\"sm\">\n      <b-card class=\"login-content\" header=\"Post List\">\n        <b-list-group  v-for=\"(post,index) in posts\" :key=\"index\">\n          <b-list-group-item @click=\"postDetail(post.id)\" button >{{post.title}}</b-list-group-item>\n          <b-icon @click=\"deletePost(post.id)\" style=\"height:30px; background-color: #ff4d4d; width:100%; color: #ffe6e6;border-radius: 0 0 10px 10px; margin-bottom:10px; cursor:pointer\" icon=\"trash\"></b-icon>\n        </b-list-group>\n      </b-card>\n    </b-container>\n  </div>\n</template>\n\n<script>\nimport firebase from \"firebase\"\nimport { router } from \"../../router\";\n\nexport default {\n  data() {\n    return {\n      posts : []\n    };\n  },\n  methods: {\n    async getPost(){\n      this.posts=[]\n        var posts=[]\n        var postsRef = firebase.database().ref('posts');\n        await postsRef.on('value',  (snapshot) => {\n          snapshot.forEach(function(childSnapshot) {\n            var item = { id :childSnapshot.key , title: childSnapshot.val().title }\n            posts.push(item)\n          });\n      })\n      this.posts=posts\n    },\n    postDetail(id){\n      router.push(\"/post/\"+id)\n    },\n    async deletePost(id){\n      var postsRef = firebase.database().ref('posts/' + id);\n      await postsRef.remove()\n        .then(function() {\n        })\n        .catch(function(error) {\n          console.log(\"Remove failed: \" + error.message)\n        });  \n        this.getPost()\n    }\n  },\n  mounted: function () {\n    this.posts=[]\n    this.getPost()\n  }\n};\n</script>"]}]}