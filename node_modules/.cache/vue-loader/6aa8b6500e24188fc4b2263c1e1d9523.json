{"remainingRequest":"/Users/erenadiguzel/vueprojects/blog-project/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/erenadiguzel/vueprojects/blog-project/src/components/post/PostList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/erenadiguzel/vueprojects/blog-project/src/components/post/PostList.vue","mtime":1585080947814},{"path":"/Users/erenadiguzel/vueprojects/blog-project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/erenadiguzel/vueprojects/blog-project/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/erenadiguzel/vueprojects/blog-project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/erenadiguzel/vueprojects/blog-project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBmaXJlYmFzZSBmcm9tICJmaXJlYmFzZSIKaW1wb3J0IHsgcm91dGVyIH0gZnJvbSAiLi4vLi4vcm91dGVyIjsKCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcG9zdHMgOiBbXQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGFzeW5jIGdldFBvc3QoKXsKICAgICAgICB2YXIgcG9zdHM9W10KICAgICAgICB2YXIgcG9zdHNSZWYgPSBmaXJlYmFzZS5kYXRhYmFzZSgpLnJlZigncG9zdHMnKTsKICAgICAgICBhd2FpdCBwb3N0c1JlZi5vbigndmFsdWUnLCAgKHNuYXBzaG90KSA9PiB7CiAgICAgICAgICBzbmFwc2hvdC5mb3JFYWNoKGZ1bmN0aW9uKGNoaWxkU25hcHNob3QpIHsKICAgICAgICAgICAgdmFyIGl0ZW0gPSB7IGlkIDpjaGlsZFNuYXBzaG90LmtleSAsIHRpdGxlOiBjaGlsZFNuYXBzaG90LnZhbCgpLnRpdGxlIH0KICAgICAgICAgICAgcG9zdHMucHVzaChpdGVtKQogICAgICAgICAgfSk7CiAgICAgIH0pCiAgICAgIHRoaXMucG9zdHM9cG9zdHMKICAgIH0sCiAgICBwb3N0RGV0YWlsKGlkKXsKICAgICAgcm91dGVyLnB1c2goIi8iK2lkKQogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gKCkgewogICAgdGhpcy5nZXRQb3N0KCkKICB9Cn07Cg=="},{"version":3,"sources":["PostList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PostList.vue","sourceRoot":"src/components/post","sourcesContent":["<template>\n\n    <div>\n    <b-container fluid=\"sm\">\n      <b-card class=\"login-content\" header=\"Post List\">\n        \n          \n            <b-list-group>\n        <b-list-group-item @click=\"postDetail(post.id)\" button v-for=\"(post,index) in posts\" :key=\"index\">{{post.title}}</b-list-group-item>\n    </b-list-group>\n          \n\n      </b-card>\n    </b-container>\n  </div>\n</template>\n\n<script>\nimport firebase from \"firebase\"\nimport { router } from \"../../router\";\n\nexport default {\n  data() {\n    return {\n      posts : []\n    };\n  },\n  methods: {\n    async getPost(){\n        var posts=[]\n        var postsRef = firebase.database().ref('posts');\n        await postsRef.on('value',  (snapshot) => {\n          snapshot.forEach(function(childSnapshot) {\n            var item = { id :childSnapshot.key , title: childSnapshot.val().title }\n            posts.push(item)\n          });\n      })\n      this.posts=posts\n    },\n    postDetail(id){\n      router.push(\"/\"+id)\n    }\n  },\n  mounted: function () {\n    this.getPost()\n  }\n};\n</script>"]}]}