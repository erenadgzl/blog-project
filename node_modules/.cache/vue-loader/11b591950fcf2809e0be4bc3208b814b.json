{"remainingRequest":"/Users/erenadiguzel/vueprojects/blog-project/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/erenadiguzel/vueprojects/blog-project/src/components/post/PostDetail.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/erenadiguzel/vueprojects/blog-project/src/components/post/PostDetail.vue","mtime":1585086319533},{"path":"/Users/erenadiguzel/vueprojects/blog-project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/erenadiguzel/vueprojects/blog-project/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/erenadiguzel/vueprojects/blog-project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/erenadiguzel/vueprojects/blog-project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBmaXJlYmFzZSBmcm9tICJmaXJlYmFzZSIKZXhwb3J0IGRlZmF1bHQgewogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBwb3N0OiB7CiAgICAgICAgdGl0bGU6ICIiLAogICAgICAgIGNvbnRlbnQ6ICIiCiAgICAgIH0KICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBvblN1Ym1pdCgpewogICAgICBmaXJlYmFzZQogICAgICAgIC5kYXRhYmFzZSgpCiAgICAgICAgLnJlZigncG9zdHMvJyt0aGlzLmlkKQogICAgICAgIC51cGRhdGUodGhpcy5wb3N0KTsKICAgIH0sCiAgICBhc3luYyBnZXRQb3N0RGV0YWlsKGlkKXsKICAgICAgICB2YXIgcG9zdD1udWxsCiAgICAgICAgdmFyIHBvc3RzUmVmID0gZmlyZWJhc2UuZGF0YWJhc2UoKS5yZWYoJ3Bvc3RzLycgKyBpZCk7CiAgICAgICAgYXdhaXQgcG9zdHNSZWYub25jZSgndmFsdWUnKS50aGVuKGZ1bmN0aW9uKHNuYXBzaG90KSB7CiAgICAgICAgICAgIHBvc3QgPSBzbmFwc2hvdC52YWwoKQogICAgICAgIH0pOwogICAgICAgIHRoaXMucG9zdCA9IHBvc3QKICAgIH0sCiAgICBvblJlc2V0KCkgewogICAgICB0aGlzLnBvc3QudGl0bGUgPSAiIjsKICAgICAgdGhpcy5wb3N0LmNvbnRlbnQgPSAiIjsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uICgpIHsKICAgIHRoaXMuZ2V0UG9zdERldGFpbCh0aGlzLiRyb3V0ZS5wYXJhbXMuaWQpCiAgfQp9Owo="},{"version":3,"sources":["PostDetail.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PostDetail.vue","sourceRoot":"src/components/post","sourcesContent":["<template>\n  <div>\n    <b-container fluid=\"sm\">\n      <b-card class=\"post-add-content\" header=\"Post Detail\">\n        <b-form class=\"sm-3\" @reset=\"onReset\">\n          <b-form-row>\n            <b-col>\n              <b-form-group\n                id=\"input-group-1\"\n                label=\"Title:\"\n                label-for=\"input-1\"\n              >\n                <b-form-input\n                  id=\"input-1\"\n                  v-model=\"post.title\"\n                  type=\"text\"\n                  required\n                  placeholder=\"Enter title\"\n                ></b-form-input>\n              </b-form-group>\n            </b-col>\n          </b-form-row>\n          <b-row>\n    <b-col sm=\"2\">\n      <label for=\"textarea-auto-height\">Post Content:</label>\n    </b-col>\n    <b-col sm=\"10\">\n      <b-form-textarea\n        id=\"textarea-auto-height\"\n        rows=\"10\"\n        max-rows=\"20\"\n        v-model=\"post.content\"\n      ></b-form-textarea>\n    </b-col>\n  </b-row>\n          <b-form-row>\n            <b-col class=\"login-button-row\">\n              <b-button @click=\"onSubmit\" type=\"button\" variant=\"success\">Update</b-button>\n              <b-button type=\"reset\" variant=\"danger\">Reset</b-button>\n            </b-col>\n          </b-form-row>\n        </b-form>\n      </b-card>\n    </b-container>\n  </div>\n</template>\n\n<script>\nimport firebase from \"firebase\"\nexport default {\n  data() {\n    return {\n      post: {\n        title: \"\",\n        content: \"\"\n      }\n    };\n  },\n  methods: {\n    onSubmit(){\n      firebase\n        .database()\n        .ref('posts/'+this.id)\n        .update(this.post);\n    },\n    async getPostDetail(id){\n        var post=null\n        var postsRef = firebase.database().ref('posts/' + id);\n        await postsRef.once('value').then(function(snapshot) {\n            post = snapshot.val()\n        });\n        this.post = post\n    },\n    onReset() {\n      this.post.title = \"\";\n      this.post.content = \"\";\n    }\n  },\n  mounted: function () {\n    this.getPostDetail(this.$route.params.id)\n  }\n};\n</script>"]}]}